"""
Django settings for be_noibo project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from S_config import config
from S_config import logging_setting
# import cx_Oracle
from redmail import outlook
from S_config import redmail_setting
from S_config.app_scanner import find_local_apps

# cx_Oracle.init_oracle_client(lib_dir=r"C:\instantclient_19_20")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# Dynamically find local apps
# Pass BASE_DIR (which is your project root where manage.py is) to the scanner
# You might need to adjust BASE_DIR if your manage.py is not at the same level as your apps.
DYNAMICALLY_FOUND_APPS = find_local_apps(BASE_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-wmwza&l(bf3a@9abbs&k1397fe%@_!k%=v)bx^x6g_64zt_i8^"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    "daphne",
    "channels",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # "corsheaders",
    # "cx_Oracle",
    "drf_yasg",
    "rest_framework",
    'django_extensions',
]
# Extend INSTALLED_APPS with the dynamically found apps
# This ensures that any new app you create at the top level will be included
# The order here matters: Django's built-in apps and your core apps should come first.
INSTALLED_APPS.extend(DYNAMICALLY_FOUND_APPS)

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        # Custom DRF authentication backend
        'IT_OAUTH.authentication.OAuth2DRFAuthentication',
        # 'rest_framework.authentication.SessionAuthentication',
    ),
    "DEFAULT_PARSER_CLASSES": (
        "rest_framework.parsers.FormParser",
        "rest_framework.parsers.MultiPartParser",
    ),
    "DEFAULT_THROTTLE_CLASSES": [
        "rest_framework.throttling.AnonRateThrottle",
        "rest_framework.throttling.UserRateThrottle",
    ],
    "DEFAULT_THROTTLE_RATES": {
        "anon": "30/min",
        "user": "30/min",
        "high": "30/min",
        "low": "5/min",
        "medium": "15/min",
        "over_high": "50/min",
        "super": "100/min",
    },
}

MIDDLEWARE = [
    "S_config.middleware.CustomErrorPagesMiddleware",
    "S_config.middleware.CustomHeaderMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "S_config.middleware.LoggingMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "IT_FilesManager.middleware.DynamicProtectedFileMiddleware",
    "IT_OAUTH.middleware.ResponseLoggingMiddleware"
]

CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_HEADERS = "*"

ROOT_URLCONF = "app.urls"

CKEDITOR_UPLOAD_PATH = "static/ckeditor/"
AUTH_USER_MODEL = "IT_OAUTH.User"
# MEDIA_ROOT = '%s/static/' % BASE_DIR
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media/")

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        # DIRS: This is where Django will look for templates that are NOT within an app.
        # It's highly recommended to have a project-level 'templates' directory.
        "DIRS": [
            # <-- Add a general project-level templates directory
            os.path.join(BASE_DIR, "templates"),
            # If IT_OAUTH/templates contains project-wide templates or overrides, keep it.
            # Otherwise, if IT_OAUTH is an installed app and these are app-specific,
            # they will be found by APP_DIRS: True.
            # os.path.join(BASE_DIR, "IT_OAUTH/templates"), # Consider if this is still needed here
        ],
        # APP_DIRS: True tells Django to look for a 'templates' directory inside
        # every app listed in INSTALLED_APPS. This is crucial for app-specific templates.
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
            # Optionally, add built-in template tag libraries that you frequently use
            # "libraries": {
            #     "static": "django.templatetags.static",
            #     "i18n": "django.templatetags.i18n",
            #     # Add your custom template tags here if any
            #     # "my_custom_tags": "myapp.templatetags.my_custom_tags",
            # },
        },
    }
]

WSGI_APPLICATION = "app.wsgi.application"
ASGI_APPLICATION = "app.asgi.application"

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASE_ROUTERS = ["app.db_routers.AppDatabaseRouter"]

DATABASES = {
    "default": {
        "ENGINE": config.ENGINE_DB,
        "NAME": config.NAME_DB,
        "USER": config.USER_DB,
        "PASSWORD": config.PASSWORD_DB,
        "HOST": config.HOST_DB,  # mặc định localhost
        "PORT": config.PORT_DB,
    },
    "oauth": {
        "ENGINE": config.ENGINE_DB_OAUTH,
        "NAME": config.NAME_DB_OAUTH,
        "USER": config.USER_DB_OAUTH,
        "PASSWORD": config.PASSWORD_DB_OAUTH,
        "HOST": config.HOST_DB_OAUTH,  # mặc định localhost
        "PORT": config.PORT_DB_OAUTH,
    },
}

CHANNEL_LAYERS = {
    # "default": {
    #     "BACKEND": "channels_redis.core.RedisChannelLayer",
    #     "CONFIG": {
    #         "hosts": [(config.HOST_REDIS_DEFAULT, config.PORT_REDIS_DEFAULT)],
    #     },
    # },
    "default": {"BACKEND": "channels.layers.InMemoryChannelLayer"}
}

# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://127.0.0.1:6379/1",
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#         }
#     },
# }

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = 'Asia/Ho_Chi_Minh'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# CONFIGURATION
CONFIG = config
# LOGGING
LOGGING = logging_setting.Setting  # time - level - module - message
# OAUTH CUSTOM
TIME_EXPIRES_TOKEN = config.ACCESS_TOKEN_EXPIRE_SECONDS  # milliseconds
TIME_EXPIRES_REFRESH_TOKEN = config.ACCESS_TOKEN_EXPIRE_REFRESH_SECONDS  # milliseconds
CLIENT_ID = config.CLIENT_ID
CLIENT_SECRET = config.CLIENT_SECRET
FORM_TOKEN = config.FORM_TOKEN
# AUTHORIZATION KEY
KEY_AUTHORIZATION = config.KEY_AUTHORIZATION
# HOST
HOST = str(config.HOST_APP)
# DATA_UPLOAD_MAX_MEMORY_SIZE
DATA_UPLOAD_MAX_MEMORY_SIZE = config.DATA_UPLOAD_MAX_MEMORY_SIZE  # 5MB
# OUTLOOK
OUTLOOK_SETTING = redmail_setting.Setting(config)
OUTLOOK_MAIL = outlook
OUTLOOK_MAIL.username = OUTLOOK_SETTING["user_name"]
OUTLOOK_MAIL.password = OUTLOOK_SETTING["password"]

OUTLOOK_MAIL_RECEPTION = outlook
OUTLOOK_MAIL_RECEPTION.username = OUTLOOK_SETTING["user_name_reception"]
OUTLOOK_MAIL_RECEPTION.password = OUTLOOK_SETTING["password_reception"]
